type Schema {
  query: Query
}

"""
Root query
"""
type Query {
  pokedex(first:Int!, after: Int = 0) : Pokedex,
  pokemon(id: Int!) : Pokemon,
  abilities(first: Int!, after: Int = 0): Abilities,
  ability(id: Int!) : Ability,
}

"""
A digital encyclopedia created by Professor Oak
"""
type Pokedex {
  count: Int
  nodes: [Pokemon]
  pageInfo: PageInfo!
}

"""
Pokemon info
"""
type Pokemon {
  id: Int,
  name: String,
  baseExperience: Int,
  isDefault: Boolean,
  order: Int,
  height: Int,
  weight: Int
}

"""
List of ability id and name
"""
type Abilities {
  count: Int
  nodes: [Ability!]
  pageInfo: PageInfo!
}

"""
Ability id and name
"""
type Ability {
  id: ID!
  name: String!
  isMainSeries: Boolean
  generation: Generation
}

type Generation {
  id: ID!,
  name: String!
}

"""
Pagination type
"""
type PageInfo {
  hasNext: Boolean!
  hasPrevious: Boolean!
  next: Int
  previous: Int
}
